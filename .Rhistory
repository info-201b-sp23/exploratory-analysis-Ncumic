library(dplyr)
AverageCheckout <- X2022_2023_All_Checkouts_SPL_Data %>%
filter(str_detect(X2022_2023_All_Checkouts_SPL_Data$Title, "A Song of Ice and Fire") & (X2022_2023_All_Checkouts_SPL_Data$Creator == "George R. R. Martin")) %>%
group_by(Title) %>%
summarize(avg_checkouts = mean(Checkouts))
library(readr)
X2022_2023_All_Checkouts_SPL_Data <- read_csv("C:/Users/bonie/Desktop/2022-2023-All-Checkouts-SPL-Data.csv")
View(X2022_2023_All_Checkouts_SPL_Data)
AverageCheckout <- X2022_2023_All_Checkouts_SPL_Data %>%
filter(str_detect(X2022_2023_All_Checkouts_SPL_Data$Title, "A Song of Ice and Fire") & (X2022_2023_All_Checkouts_SPL_Data$Creator == "George R. R. Martin")) %>%
group_by(Title) %>%
summarize(avg_checkouts = mean(Checkouts))
View(AverageCheckout)
checkoutNumber <- X2022_2023_All_Checkouts_SPL_Data %>%
filter(str_detect(X2022_2023_All_Checkouts_SPL_Data$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
View(checkoutNumber)
checkoutNumber <- X2022_2023_All_Checkouts_SPL_Data %>%
filter(str_detect(X2022_2023_All_Checkouts_SPL_Data$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
slice(1)
checkoutMonthMost <- X2022_2023_All_Checkouts_SPL_Data %>%
filter(str_detect(X2022_2023_All_Checkouts_SPL_Data$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
head(n = 1) %>%
pull(CheckoutMonth)
CMMB <- X2022_2023_All_Checkouts_SPL_Data %>%
filter(str_detect(X2022_2023_All_Checkouts_SPL_Data$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
head(n = 1) %>%
pull(CheckoutMonth)
CMME <- X2022_2023_All_Checkouts_SPL_Data %>%
filter((X2022_2023_All_Checkouts_SPL_Data$MaterialType == "EBOOK") & (str_detect(X2022_2023_All_Checkouts_SPL_Data$Title, "A Song of Ice and Fire"))) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
View(CMME)
View(checkoutNumber)
library(stringr)
library(dplyr)
library(readr)
DataSPI <- read_csv("C:/Users/bonie/Desktop/2022-2023-All-Checkouts-SPL-Data.csv")
View(DataSPI)
# What is the average number of checkouts for each item?
AverageCheckout <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Song of Ice and Fire") & (DataSPI$Creator == "George R. R. Martin")) %>%
group_by(Title) %>%
summarize(avg_checkouts = mean(Checkouts))
# What is the month or year with the most checkouts for "A Game of Thrones"? (CMMB stand for CheckoutMonthMostBook)
CMMB <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
head(n = 1) %>%
pull(CheckoutMonth)
# What is the month or year with the most checkouts for ebooks? (CMME stand for CheckoutMonthMostEBook)
CMME <- DataSPI %>%
filter((DataSPI$MaterialType == "EBOOK") & (str_detect(DataSPI$Title, "A Song of Ice and Fire"))) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
DataSPI <- read_csv("C:/Users/bonie/Desktop/2022-2023-All-Checkouts-SPL-Data.csv")
AverageCheckout <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Song of Ice and Fire") & (DataSPI$Creator == "George R. R. Martin")) %>%
group_by(Title) %>%
summarize(avg_checkouts = mean(Checkouts))
# What is the month or year with the most checkouts for "A Game of Thrones"? (CMMB stand for CheckoutMonthMostBook)
CMMB <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Game of Thrones") ) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
head(n = 1) %>%
pull(CheckoutMonth)
CMMB <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Game of Thrones") ) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
View(CMMB)
CMMB <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Game of Thrones") & (DataSPI$MaterialType == "BOOK")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
View(CMMB)
CMMB <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
head(n = 1) %>%
pull(CheckoutMonth)
View(CMME)
CMME <- DataSPI %>%
filter((DataSPI$MaterialType == "EBOOK") & (str_detect(DataSPI$Title, "A Song of Ice and Fire"))) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
head(n = 1) %>%
pull(CheckoutMonth)
CMME <- DataSPI %>%
filter((DataSPI$MaterialType == "EBOOK")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts)) %>%
head(n = 1) %>%
pull(CheckoutMonth)
View(AverageCheckout)
CM <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
MCM <- got_checkouts %>% head(1)%>%pull(CheckoutMonth)
CM <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Game of Thrones")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
MCM <- CM %>% head(1)%>%pull(CheckoutMonth)
LCM <- CM %>% tail(1)%>%pull(CheckoutMonth)
View(CM)
CME <- DataSPI %>%
filter((DataSPI$MaterialType == "EBOOK")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(desc(total_checkouts))
MCME <- CME %>% head(1)%>%pull(CheckoutMonth)
LCME <- CME %>% tail(1)%>%pull(CheckoutMonth)
View(CME)
print_checkouts <- X2022_2023_All_Checkouts_SPL_Data %>%
filter(MediaType == "Book") %>%
mutate(Year = format(CheckoutDateTime, "%Y")) %>%
group_by(Year) %>%
summarize(total_checkouts = sum(Circulation)) %>%
arrange(Year)
print_checkouts <- DataSPI %>%
filter(DataSPI$MaterialType == "BOOK") %>%
mutate(Year = format(CheckoutDateTime, "%Y")) %>%
group_by(Year) %>%
summarize(total_checkouts = sum(Circulation)) %>%
arrange(Year)
print_checkouts <- DataSPI %>%
filter(DataSPI$MaterialType == "BOOK") %>%
mutate(Year = format(CheckoutDateTime, "%Y")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(CheckoutMonth)
print_checkouts <- DataSPI %>%
filter(DataSPI$MaterialType == "BOOK") %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(CheckoutMonth)
View(print_checkouts)
View(AverageCheckout)
CheckoutClash <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Clash of Kings")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(CheckoutMonth)
CheckoutStorm <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Storm of Swords")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(CheckoutMonth)
View(CheckoutClash)
View(CheckoutStorm)
View(AverageCheckout)
View(AverageCheckout)
View(AverageCheckout)
write.csv(AverageCheckout, "C:/Users/bonie/Desktop/INFO201/a3-spl-checkouts-BonieXCW/AverageCheckout.csv", row.names=FALSE)
directory <-getwd()
write.csv(AverageCheckout, "AverageCheckout.csv", row.names=FALSE)
write.csv(AverageCheckout, "AverageCheckout.csv")
write.csv(MCM, "MCM.csv")
write.csv(LCM, "LCM.csv")
write.csv(MCME, "MCME.csv")
write.csv(LCME, "LCME.csv")
write.csv(print_checkouts, "print_checkouts.csv")
write.csv(CheckoutClash, "CheckoutClash.csv")
write.csv(CheckoutStorm, "CheckoutStorm.csv")
View(print_checkouts)
View(CheckoutClash)
View(CheckoutStorm)
library(ggplot2)
ggplot(data = AverageCheckout) +
geom_col(mapping = aes(
x = AverageCheckout$Title,
y= AverageCheckout$avg_checkouts,
fill = AverageCheckout$Title)
)
for (i in seq(from = 2, to = ncol(AverageCheckout), by = 2)) {
combined_col <- paste(AverageCheckout[,i-1], AverageCheckout[,i], sep = " ")
combined_AverageCheckout <- cbind(combined_AverageCheckout, combined_col)
}
combined_AverageCheckout <- data.frame(Title = AverageCheckout$Title)
for (i in seq(from = 2, to = ncol(AverageCheckout), by = 2)) {
combined_col <- paste(AverageCheckout[,i-1], AverageCheckout[,i], sep = " ")
combined_AverageCheckout <- cbind(combined_AverageCheckout, combined_col)
}
View(combined_AverageCheckout)
AverageCheckout$Title <- str_extract(AverageCheckout$Title, ".*(?= \\()|.*(?=$)")
AverageCheckout %>%
group_by(Title) %>%
summarise(avg_checkouts = sum(avg_checkouts))
View(AverageCheckout)
AverageCheckout_combined <- data.frame(
Title = unique(gsub(" \\(unabridged\\)", "", AverageCheckout$Title)),  # remove (unabridged) from title
avg_checkouts = rowSums(matrix(AverageCheckout$avg_checkouts, ncol = 2, byrow = TRUE))
)
AverageCheckout <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Song of Ice and Fire") & (DataSPI$Creator == "George R. R. Martin")) %>%
group_by(Title) %>%
summarize(avg_checkouts = mean(Checkouts))
AverageCheckout_combined <- data.frame(
Title = unique(gsub(" \\(unabridged\\)", "", AverageCheckout$Title)),  # remove (unabridged) from title
avg_checkouts = rowSums(matrix(AverageCheckout$avg_checkouts, ncol = 2, byrow = TRUE))
)
View(AverageCheckout_combined)
library(ggplot2)
ggplot(data = AverageCheckout_combined) +
geom_col(mapping = aes(
x = AverageCheckout_combined$Title,
y= AverageCheckout_combined$avg_checkouts,
fill = AverageCheckout_combined$Title)
)
library(ggplot2)
ggplot(data = AverageCheckout_combined) +
geom_col(mapping = aes(
x = Title,
y= avg_checkouts,
fill = Title)
)
ggplot(data = AverageCheckout_combined) +
geom_col(mapping = aes(
x = Title,
y= avg_checkouts,
fill = Title)
) +  scale_x_discrete(labels = function(x) paste0("book", seq_along(x)))
ggplot(data = AverageCheckout_combined) +
geom_col(mapping = aes(
x = Title,
y= avg_checkouts,
fill = Title)
) +
scale_x_discrete(labels = function(x) paste0("book", seq_along(x))) +
ggtitle("Average Checkouts for A Song of Ice and Fire Series") +
labs(fill = "Book Titles")
ggplot(data = AverageCheckout_combined) +
geom_col(mapping = aes(
x = Title,
y= avg_checkouts,
fill = Title)
) +
scale_x_discrete(labels = function(x) paste0("book", seq_along(x))) +
ggtitle("Average Checkouts for A Song of Ice and Fire Series") +
labs(fill = "Book Titles for each series")
View(AverageCheckout_combined)
View(CheckoutClash)
View(CheckoutStorm)
View(CheckoutClash)
View(CheckoutStorm)
np_data <- read.csv('https://github.com/melaniewalsh/Neat-Datasets/raw/main/1979-2020-National-Park-Visits-By-State.csv')
# Install relevant libraries
install.packages("scales")
# Load relevant libraries
library("scales")
library("dplyr")
library("ggplot2")
# Exercise 1: You're going to compare the recreation visits over time for at least 2 National Parks
# Explore np_data and pick at least 2 NPs that would be interesting to compare
# Filter the data for those 2 or more NPs
my_parks <- np_data %>%
filter(ParkName %in% c("Arches NP", "Gateway Arch NP"))
# Exercise 2: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# See what the plot looks like before you turn off scientific notation, and then turn off scientific notation by uncommenting and running the line below
# options(scipen = 999)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName))
# Exercise 3: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# Additionally, choose a new color palette
# Possible color palettes: https://r-graph-gallery.com/38-rcolorbrewers-palettes.html
# Also, add a significant, attention-grabbing title and legible x, y axes labels
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName)) +
scale_color_brewer(palette = "Set2") +
labs(title = "Arches supresses the Badlands in the 21st Century", x = "Year", y = "Number of Visits")
# Exercise 4: Make a line plot of your 2 or more NPs, and color the lines by the names of the park
# Additionally, choose a new color palette
# Also, add a significant, attention-grabbing title and legible x, y axes labels
# Finally, format the x tick labels so that they appear every 5 years, and change the y axis to abbreviated thousands (k) and millions (m)
ggplot(my_parks) +
geom_line(aes(x = Year, y = RecreationVisits, color = ParkName)) +
scale_color_brewer(palette = "Set2") +
labs(title = "Arches Overtakes the Gateway in the 21st Century", x = "Year", y = "Number of Visits") +
scale_x_continuous(breaks = seq(1980, 2020, 5)) +
scale_y_continuous(labels = label_number_si())
install.packages("scales")
View(my_parks)
CheckoutClashStorm <- merge(x=CheckoutClash,y=CheckoutStorm,
by="CheckoutMonth", all.x=TRUE)
View(CheckoutClashStorm)
View(CheckoutClash)
View(CheckoutClashStorm)
View(my_parks)
write.csv(CheckoutClashStorm, "CheckoutClashStorm.csv")
ggplot(data = df, aes(x = CheckoutMonth)) +
geom_line(aes(y = total_checkouts.x, color = "Total Checkouts X")) +
geom_line(aes(y = total_checkouts.y, color = "Total Checkouts Y")) +
labs(title = "Total Checkouts by Month",
x = "Checkout Month",
y = "Total Checkouts",
color = "Line") +
scale_color_manual(values = c("Total Checkouts X" = "blue", "Total Checkouts Y" = "red"))
library("scales")
library("dplyr")
library("ggplot2")
ggplot(data = CheckoutClashStorm, aes(x = CheckoutMonth)) +
geom_line(aes(y = total_checkouts.x, color = "Total Checkouts X")) +
geom_line(aes(y = total_checkouts.y, color = "Total Checkouts Y")) +
labs(title = "Total Checkouts by Month",
x = "Checkout Month",
y = "Total Checkouts",
color = "Line") +
scale_color_manual(values = c("Total Checkouts X" = "blue", "Total Checkouts Y" = "red"))
ggplot(data = CheckoutClashStorm, aes(x = CheckoutMonth)) +
geom_line(aes(y = total_checkouts.x, color = "Total Checkouts X")) +
geom_line(aes(y = total_checkouts.y, color = "Total Checkouts Y")) +
labs(title = "Total Checkouts by Month",
x = "Checkout Month",
y = "Total Checkouts",
color = "Line") +
scale_color_manual(values = c("Total Checkouts X" = "blue", "Total Checkouts Y" = "red")) +
scale_x_continuous(breaks = 1:12)
View(AverageCheckout_combined)
CheckoutDragon <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Dance with Dragons")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(CheckoutMonth)
CheckoutClashStorm <- merge(x=CheckoutClash,y=CheckoutDragon,
by="CheckoutMonth", all.x=TRUE)
View(CheckoutClash)
View(CheckoutClashStorm)
CheckoutClashDragon <- merge(x=CheckoutClash,y=CheckoutDragon,
by="CheckoutMonth", all.x=TRUE)
View(CheckoutClashDragon)
ggplot(data = CheckoutClashDragon, aes(x = CheckoutMonth)) +
geom_line(aes(y = total_checkouts.x, color = "Total Checkouts for A Clash of Kings")) +
geom_line(aes(y = total_checkouts.y, color = "Total Checkouts for A Dance with Dragons")) +
labs(title = "Checkouts for A Clash of Kings and A Dance with Dragos by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_color_manual(values = c("A Clash of Kings" = "blue", "A Dance with Dragons" = "red")) +
scale_x_continuous(breaks = 1:12)
View(AverageCheckout_combined)
CheckoutDragon <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Dance with Dragons")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(CheckoutMonth)
CheckoutStorm <- DataSPI %>%
filter(str_detect(DataSPI$Title, "A Storm of Swords")) %>%
group_by(CheckoutMonth) %>%
summarize(total_checkouts = sum(Checkouts)) %>%
arrange(CheckoutMonth)
CheckoutStormDragon <- merge(x=CheckoutStorm,y=CheckoutDragon,
by="CheckoutMonth", all.x=TRUE)
View(CheckoutStormDragon)
ggplot(data = CheckoutStormDragon, aes(x = CheckoutMonth)) +
geom_line(aes(y = total_checkouts.x, color = "Total Checkouts for A Storm of Swords")) +
geom_line(aes(y = total_checkouts.y, color = "Total Checkouts for A Dance with Dragons")) +
labs(title = "Checkouts for A Strom of Swords and A Dance with Dragos by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_color_manual(values = c("A Storm of Swords" = "blue", "A Dance with Dragons" = "red")) +
scale_x_continuous(breaks = 1:12)
ggplot(data = CheckoutStormDragon, aes(x = CheckoutMonth)) +
geom_line(aes(y = total_checkouts.x, color = "A Storm of Swords")) +
geom_line(aes(y = total_checkouts.y, color = "A Dance with Dragons")) +
labs(title = "Checkouts for A Storm of Swords and A Dance with Dragons by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_color_manual(values = c("A Storm of Swords" = "blue", "A Dance with Dragons" = "red")) +
scale_x_continuous(breaks = 1:12)
library(ggplot2)
ggplot(data = AverageCheckout_combined) +
geom_col(mapping = aes(
x = Title,
y= avg_checkouts,
fill = Title)
) +
scale_x_discrete(labels = function(x) paste0("book", seq_along(x))) +
ggtitle("Average Checkouts for A Song of Ice and Fire Series") +
labs(fill = "Book Titles for each series")
library("ggplot2")
source("summary.R")
setwd("C:/Users/bonie/Desktop/Bonie/INFO201/a3-spl-checkouts-BonieXCW")
library("ggplot2")
source("summary.R")
ggplot(data = CheckoutStormDragon, aes(x = CheckoutMonth)) +
geom_line(aes(y = StormCheckouts, color = "A Storm of Swords")) +
geom_line(aes(y = DragonCheckouts, color = "A Dance with Dragons")) +
labs(title = "Checkouts for A Storm of Swords and A Dance with Dragons by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_color_manual(values = c("A Storm of Swords" = "blue", "A Dance with Dragons" = "red")) +
scale_x_continuous(breaks = 1:12)
library(readr)
earthquake_data <- read_csv("C:/Users/bonie/Downloads/earthquake_data.csv")
View(earthquake_data)
ggplot(data = CheckoutStormDragon, aes(x = CheckoutMonth)) +
geom_line(aes(y = StormCheckouts, color = "A Storm of Swords")) +
geom_line(aes(y = DragonCheckouts, color = "A Dance with Dragons")) +
labs(title = "Checkouts for A Storm of Swords and A Dance with Dragons by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_color_manual(values = c("A Storm of Swords" = "blue", "A Dance with Dragons" = "red")) +
scale_x_continuous(breaks = 1:12)
ggplot(data = CheckoutEPBOOK, aes(x = CheckoutMonth)) +
geom_line(aes(y = EbookCheckout, color = "EbookCheckout")) +
geom_line(aes(y = Print_BookCheckout, color = "Print_BookCheckout")) +
labs(title = "Checkouts for EBooks and Print_Books by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_color_manual(values = c("EbookCheckout" = "blue", "Print_BookCheckout" = "red")) +
scale_x_continuous(breaks = 1:12)
ggplot(data = CheckoutEPBOOK, aes(x = CheckoutMonth)) +
geom_line(aes(y = EbookCheckout, color = "EbookCheckout")) +
geom_line(aes(y = Print_BookCheckout, color = "Print_BookCheckout")) +
labs(title = "Checkouts for EBooks and Print_Books by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_x_continuous(breaks = 1:12)
ggplot(data = CheckoutEPBOOK, aes(x = CheckoutMonth)) +
geom_line(aes(y = EbookCheckout, color = "EbookCheckout")) +
geom_line(aes(y = Print_BookCheckout, color = "Print_BookCheckout")) +
labs(title = "Checkouts for EBooks and Print_Books by Month",
x = "Checkout Month",
y = "Checkouts",
color = "Line") +
scale_color_manual(values = c("EbookCheckout" = "blue", "Print_BookCheckout" = "red")) +
scale_x_continuous(breaks = 1:12)
ggplot(data = AverageCheckout_combined) +
geom_col(mapping = aes(
x = Title,
y= avg_checkouts,
fill = Title)
) +
scale_x_discrete(labels = function(x) paste0("book", seq_along(x))) +
ggtitle("Average Checkouts for A Song of Ice and Fire Series") +
labs(fill = "Book Titles for each series",
x = "Book Title",
y = "Average Checkouts")
View(CheckoutStorm)
View(CME)
earthquake <- read.csv('https://www.kaggle.com/datasets/warcoder/earthquake-dataset?select=earthquake_data.csv')
earthquake <- read.csv('https://www.kaggle.com/datasets/warcoder/earthquake-dataset?select=earthquake_data.csv')
View(earthquake)
earthquake <- read.csv('/kaggle/input/earthquake-dataset/earthquake_data.csv')
earthquake <- read.csv('https://www.kaggle.com/code/naumoff/earthquake')
View(earthquake)
earthquake <- read.csv('https://www.kaggle.com/code/naumoff/earthquake/input?select=earthquake_data.csv')
View(earthquake)
earthquake <- read.csv('/kaggle/input/earthquake-dataset/earthquake_data.csv')
souce('earthquake_data.csv')
source('earthquake_data.csv')
library(readr)
earthquake_data <- read_csv("C:/Users/bonie/Desktop/Bonie/INFO201/exploratory-analysis-Ncumic/earthquake_data.csv")
View(earthquake_data)
earthquake_data <- read_csv("C:/Users/bonie/Desktop/Bonie/INFO201/exploratory-analysis-Ncumic/earthquake_data.csv")
earthquake_data <- read_csv("https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv")
earthquake_data <- read_csv("https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv")
earthquake_data <- source('earthquake_data.csv')
setwd("C:/Users/bonie/Desktop/Bonie/INFO201/exploratory-analysis-Ncumic")
earthquake_data <- source('earthquake_data.csv')
earthquake_data <- source("earthquake_data.csv")
earthquake <- read.csv('https://cdn.inst-fs-iad-prod.inscloudgate.net/6047709e-177d-49b1-a336-1fb8320feb20/STAT390-Lab08.pdf?token=eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCIsImtpZCI6ImNkbiJ9.eyJyZXNvdXJjZSI6Ii82MDQ3NzA5ZS0xNzdkLTQ5YjEtYTMzNi0xZmI4MzIwZmViMjAvU1RBVDM5MC1MYWIwOC5wZGYiLCJ0ZW5hbnQiOiJjYW52YXMiLCJ1c2VyX2lkIjoiMTAwMDAwMDA0MDI0MDI3IiwiaWF0IjoxNjg0MjQxODU1LCJleHAiOjE2ODQzMjgyNTV9.uJ_2Ho4gq2MTmVBdhHadlEkMmqC_FKPOzhJM7-WDtXruLtM2OlPN1Z0ZMJByDjQkxNJTe0YToPC4Hl0KkjY4FA&download=1&content_type=application%2Fpdf')
earthquake <- read.csv('https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv')
earthquake <- read.csv(url('https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv'))
earthquake <- read.csv(url('https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv'))
View(earthquake)
earthquake <- read.csv('https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv')
View(earthquake)
earthquake <- read.csv('blob:https://github.com/352b96ec-3340-44b0-888b-8904438d5341')
earthquake <- read.csv('https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv?plain=1')
earthquake <- read.csv('https://github.com/info-201b-sp23/exploratory-analysis-Ncumic/blob/main/earthquake_data.csv?plain=1')
earthquake <- read.csv('https://raw.githubusercontent.com/info-201b-sp23/exploratory-analysis-Ncumic/main/earthquake_data.csv')
View(earthquake)
earthquake <- read.csv('https://raw.githubusercontent.com/info-201b-sp23/exploratory-analysis-Ncumic/main/earthquake_data.csv')
earthquake_data <- read.csv('https://raw.githubusercontent.com/info-201b-sp23/exploratory-analysis-Ncumic/main/earthquake_data.csv')
earthquake_data <- read.csv('https://raw.githubusercontent.com/info-201b-sp23/exploratory-analysis-Ncumic/main/earthquake_data.csv')
earthquake_data <- read.csv('https://raw.githubusercontent.com/info-201b-sp23/exploratory-analysis-Ncumic/main/earthquake_data.csv')
View(earthquake_data)
View(earthquake_data)
